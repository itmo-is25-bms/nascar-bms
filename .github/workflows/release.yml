name: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "issue-*" ]

env:
  IMAGE_NAME: cr.yandex/crp67o7qqbgu7l8alg3o/bms

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.store-image.outputs.image }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      -
        name: Login to Yandex Cloud Container Registry
        id: login-cr
        if: ${{ github.event_name != 'pull_request' }}
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      -
        name: Set Java to 17 version
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      -
        name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      -
        name: Build gradle image
        run: |
          ./gradlew bootBuildImage --imageName=${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      -
        name: Push image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      -
        name: Store image in github outputs
        id: store-image
        run: |
          echo "image=${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT

  ansible:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - run: echo '${{ toJSON(needs.docker.outputs.image) }}'
